#!/bin/sh -e
# postinst script for clusterhat
# see: dh_installdeb(1)

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <postinst> `abort-remove'
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see https://www.debian.org/doc/debian-policy/ or
# the debian-policy package

. /usr/share/debconf/confmodule

case "$1" in
#    preconfigure)
#    ;;
	# Both initialise AND reconfigure
	configure)
		CONFIGFILE=/etc/default/clusterctrl

		# copy default template
		if [ ! -e $CONFIGFILE ]; then
			cp /usr/share/clusterctrl/clusterctrl.sample $CONFIGFILE
			echo 'TYPE=Bridge' >> "$CONFIGFILE"
		fi

		# Substitute in the values from the debconf db.
		# There are obvious optimizations possible here.
		# The cp before the sed ensures we do not mess up
		# the config file's ownership and permissions.

		#VALID='';while [ ! "$VALID" ]; do; db_get clusterctrl/device_type; if [ "$RET" = "NAT" ] || [ "$RET" = "Bridge" ]; then; VALID=1;fi; done
		db_get clusterctrl/device_type
		TYPE="$RET"
		cp -a -f $CONFIGFILE $CONFIGFILE.tmp

		# If the admin deleted or commented some variables but then set
		# them via debconf, (re-)add them to the conffile.
		test -z "$TYPE" || grep -Eq '^ *TYPE=' $CONFIGFILE || echo "TYPE=" >> $CONFIGFILE
		sed -e "s/^ *TYPE=.*/TYPE=\"$TYPE\"/" < $CONFIGFILE > $CONFIGFILE.tmp
		mv -f $CONFIGFILE.tmp $CONFIGFILE

		## read in configfile
		. $CONFIGFILE

		if [ -f /etc/dhcpcd.conf ] ; then
			rm -f /etc/dhcpcd.conf.old
			mv /etc/dhcpcd.conf /etc/dhcpcd.conf.old
			echo "made backup of DHCPCD"
		fi

		cat << EOF >> /etc/dhcpcd.conf
# ClusterCTRL
reboot 15
denyinterfaces ethpi* ethupi* ethupi*.10 brint eth0 usb0.10
profile clusterctrl_fallback_usb0
static ip_address=172.19.181.253/24 #ClusterCTRL
static routers=172.19.181.254
static domain_name_servers=8.8.8.8 208.67.222.222
profile clusterctrl_fallback_br0
static ip_address=172.19.181.254/24
interface usb0
fallback clusterctrl_fallback_usb0
interface br0
fallback clusterctrl_fallback_br0
EOF

		echo "Appended to DHCPCD"

		if [ -f /etc/iptables/rules.v4 ] ; then
			rm -f /etc/iptables/rules.v4.old
			mv /etc/iptables/rules.v4 /etc/iptables/rules.v4.old
			echo "Made backup of IPTables rules.v4
		fi
		cat << EOF >> /etc/iptables/rules.v4
# Generated by iptables-save v1.6.0 on Fri Mar 13 00:00:00 2018
*filter
:INPUT ACCEPT [7:1365]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
-A FORWARD -i br0 ! -o br0 -j ACCEPT
-A FORWARD -o br0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
COMMIT
# Completed on Fri Mar 13 00:00:00 2018
# Generated by iptables-save v1.6.0 on Fri Mar 13 00:00:00 2018
*nat
:PREROUTING ACCEPT [8:1421]
:INPUT ACCEPT [7:1226]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
-A POSTROUTING -s 172.19.181.0/24 ! -o br0 -j MASQUERADE
COMMIT
# Completed on Fri Mar 13 00:00:00 2018
EOF
		echo "Appended to iptables.rules.v4"


		# Enable uart with login
		raspi-config nonint do_serial 0
		eho "Enabled serial"
		# Enable I2C (used for I/O expander on Cluster HAT v2.x)
		raspi-config nonint do_i2c 0
		echo "Enabled i2c"



		rm -f /etc/network/interfaces.d/clusterctrl
		echo "Removed interfaces folder"
		sed -i 's~^static ip_address=172.19.181.*/24 #Cluster.*~static ip_address=172.19.181.253/24 #ClusterCTRL~' /etc/dhcpcd.conf
		if [ "$TYPE" = "NAT" ]; then
			cp -f /usr/share/clusterctrl/interfaces.nat /etc/network/interfaces.d/clusterctrl
		elif [ "$TYPE" = "Bridge" ];then
			cp -f /usr/share/clusterctrl/interfaces.bridge /etc/network/interfaces.d/clusterctrl
			sed -i 's#^\(denyinterfaces.*\)#\1 eth0#' /etc/dhcpcd.conf
		fi
		echo "Added back predefined interfaces"

		SYSCTLCONFED=$(grep -c "net.ipv4.ip_forward=1 # ClusterCTRL" /etc/sysctl.conf)
		if [ "$SYSCTLCONFED" -eq 0  ];then
			if [ "$TYPE" = "NAT" ]; then
				echo 'net.ipv4.ip_forward=1 # ClusterCTRL' >> /etc/sysctl.conf
			elif [ "$TYPE" = "Bridge" ]; then
				echo '#net.ipv4.ip_forward=1 # ClusterCTRL' >> /etc/sysctl.conf
			fi
		else
			if [ "$TYPE" = "NAT" ]; then
				sed -i "s/^#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1 # ClusterCTRL/" /etc/sysctl.conf
			elif [ "$TYPE" = "Bridge" ]; then
				sed -i "s/^net.ipv4.ip_forward=1/#net.ipv4.ip_forward=1 # ClusterCTRL/" /etc/sysctl.conf
			fi
		fi
		echo "Changed sysctl.conf"


		printf '%s\n' 'mountd: 172.19.180.' 'rpcbind: 172.19.180.' '' >> /etc/hosts.allow
		printf '%s\n' 'mountd: ALL' 'rpcbind: ALL' '' >> /etc/hosts.deny
		echo "hosts allow/deny"

		# Extract files
		# dont need to do this if using deb package
		#(tar --exclude=.git -cC ../files/ -f - .) | (chroot $MNT tar -xC /)

		# Setup directories for rpiboot
#		echo ":$DATA_DIR: :$NODE_PREFIX: :$BOOT_DIR: :$NFS_DIR: :$OFS_DIR: :$OFS_LOWER_DIR: :$VFS_DIR: :$VFS_SIZE:"
		mkdir -p "$DATA_DIR/$BOOT_DIR"
		ln -fs /boot/bootcode.bin "$DATA_DIR/$BOOT_DIR"
		mkdir -p "$DATA_DIR/$NFS_DIR"
		mkdir -p "$DATA_DIR/$VFS_DIR"
		mkdir -p "$DATA_DIR/$OFS_DIR"
		echo "mkdirs"
		# Setup NFS exports for NFSROOT
		echo "# ClusterCTRL exports for USB boot" >> /etc/exports
		P=1
		while [ "$P" -le 4 ]; do
			echo "$DATA_DIR/$NFS_DIR/$NODE_PREFIX$P 172.19.180.$P(rw,sync,no_subtree_check,no_root_squash)" >> /etc/exports
			mkdir -p "$DATA_DIR/$NFS_DIR/$NODE_PREFIX$P"
			P=$(( P + 1 ))
		done
		echo "export nfs folders"

		# Enable clusterctrl init
#		deb-systemd-helper enable controllers/clusterctrl-init

		# Enable rpiboot for booting without SD cards
#		deb-systemd-helper enable controllers/clusterctrl-rpiboot

		# Disable nfs server (rely on clusterctrl-rpiboot to start it if needed)
		deb-systemd-helper disable nfs-kernel-server
		echo "disable nfs server"
		udevadm control --reload-rules
		echo "reload udev"
	;;

	abort-upgrade|abort-remove|abort-deconfigure)
	;;
	*)
		echo "postinst called with unknown argument \`$1'" >&2
		exit 1
	;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
